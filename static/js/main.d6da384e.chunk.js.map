{"version":3,"sources":["actions/types.js","actions/employees.js","components/layout/Navbar.js","components/pages/Home.js","components/layout/spinner.gif","components/layout/Spinner.js","components/employees/AbcListItem.js","components/employees/EmpData.js","components/employees/EmpBirthdayItem.js","components/employees/MonthItem.js","components/employees/EmpBirthday.js","components/employees/Employees.js","components/pages/NotFound.js","components/pages/About.js","reducers/employees.js","reducers/index.js","store.js","App.js","index.js"],"names":["GET_EMPLOYEES","CREATE_ABC_SORTED_LIST","CREATE_MONTH_SORTED_LIST","EMPLOYEES_ERROR","CLEAR_EMPLOYEES","SET_SHOWBIRTHDAY","CREATE_SHOWBIRTHDAY_LIST","updateLocalStorage","user","showBirthdayInfo","employees","JSON","parse","localStorage","getItem","show","find","employer","id","showBirthday","item","filter","push","setItem","stringify","isShowBirthdayChecked","checkedUser","showArr","length","getShowBirthdayInfo","dispatch","res","type","payload","error","console","message","Navbar","logo","icon","clearEmployees","className","to","onClick","href","target","rel","defaultProps","connect","a","Home","style","display","justifyContent","alignItems","flexDirection","height","Spinner","src","spinner","alt","width","margin","changeUsersShowBirthday","index","Date","dob","getMonth","useState","setShowBirthday","htmlFor","lastName","firstName","value","checked","onChange","state","abcSortedList","lists","sortEmployeesByAbc","employeeList","split","forEach","letter","newBox","title","employeesAbc","charAt","useEffect","map","EmpBirthdayItem","users","getMonthName","date","getDay","getFullYear","MonthItem","month","sortEmployeesByMonth","months","usersSortedByMonth","newBirthdayMonth","monthSortedList","showBirthdayList","getEmployees","axios","get","data","loading","NotFound","About","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","basename","exact","path","component","Employees","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6da384e.chunk.js","sourcesContent":["export const GET_EMPLOYEES = 'GET_EMPLOYEES';\r\nexport const CREATE_ABC_SORTED_LIST = 'CREATE_ABC_SORTED_LIST';\r\nexport const CREATE_MONTH_SORTED_LIST = 'CREATE_MONTH_SORTED_LIST';\r\nexport const EMPLOYEES_ERROR = 'EMPLOYEES_ERROR ';\r\nexport const CLEAR_EMPLOYEES = 'CLEAR_EMPLOYEES';\r\n\r\nexport const SET_SHOWBIRTHDAY = 'SET_SHOWBIRTHDAY';\r\nexport const CREATE_SHOWBIRTHDAY_LIST = ' CREATE_SHOWBIRTHDAY_LIST';\r\n","import {\r\n  GET_EMPLOYEES,\r\n  CREATE_ABC_SORTED_LIST,\r\n  CREATE_MONTH_SORTED_LIST,\r\n  CLEAR_EMPLOYEES,\r\n  EMPLOYEES_ERROR,\r\n  SET_SHOWBIRTHDAY,\r\n  CREATE_SHOWBIRTHDAY_LIST,\r\n} from './types';\r\nimport axios from 'axios';\r\n\r\nexport const getEmployees = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      'https://yalantis-react-school-api.yalantis.com/api/task0/users'\r\n    );\r\n\r\n    let employees = [];\r\n\r\n    res.data.forEach((employer) => {\r\n      if (isShowBirthdayChecked(employer)) {\r\n        employer.showBirthday = true;\r\n      } else {\r\n        employer.showBirthday = false;\r\n      }\r\n      employees.push(employer);\r\n    });\r\n\r\n    localStorage.setItem('employees', JSON.stringify(employees));\r\n\r\n    dispatch({ type: GET_EMPLOYEES, payload: employees });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: EMPLOYEES_ERROR,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const sortEmployeesByAbc = (employees) => (dispatch) => {\r\n  const abc = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n\r\n  try {\r\n    const employeeList = [];\r\n    abc.split('').forEach((letter) => {\r\n      const newBox = { title: letter, employeesAbc: [] };\r\n      employeeList.push(newBox);\r\n\r\n      employees.forEach((employer) => {\r\n        if (employer.lastName.charAt(0) === newBox.title) {\r\n          newBox.employeesAbc.push(employer);\r\n        }\r\n      });\r\n    });\r\n\r\n    dispatch({ type: CREATE_ABC_SORTED_LIST, payload: employeeList });\r\n  } catch (error) {\r\n    console.error(error.message);\r\n  }\r\n};\r\n\r\nexport const sortEmployeesByMonth = (employees) => (dispatch) => {\r\n  const months = getMonthsNames();\r\n\r\n  try {\r\n    const usersSortedByMonth = [];\r\n    months.forEach((month, index) => {\r\n      const newBirthdayMonth = { id: index, title: month, users: [] };\r\n      usersSortedByMonth.push(newBirthdayMonth);\r\n    });\r\n\r\n    employees.forEach((user) => {\r\n      if (user.showBirthday) {\r\n        const month = new Date(user.dob);\r\n        const index = month.getMonth();\r\n        usersSortedByMonth[index].users.push(user);\r\n      }\r\n    });\r\n    dispatch({ type: CREATE_MONTH_SORTED_LIST, payload: usersSortedByMonth });\r\n  } catch (error) {\r\n    console.error(error.message);\r\n  }\r\n};\r\n\r\nexport const clearEmployees = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CLEAR_EMPLOYEES });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: EMPLOYEES_ERROR,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const changeUsersShowBirthday = (user) => (dispatch) => {\r\n  const month = new Date(user.dob);\r\n  const index = month.getMonth();\r\n\r\n  try {\r\n    dispatch({ type: SET_SHOWBIRTHDAY, payload: { user, index } });\r\n    updateLocalStorage(user);\r\n  } catch (error) {\r\n    console.error(error.message);\r\n  }\r\n};\r\n\r\nconst updateLocalStorage = (user) => {\r\n  let employees = JSON.parse(localStorage.getItem('employees'));\r\n  let showBirthdayInfo;\r\n  if (localStorage.getItem('showBirthdayInfo') === null) {\r\n    showBirthdayInfo = [];\r\n  } else {\r\n    showBirthdayInfo = JSON.parse(localStorage.getItem('showBirthdayInfo'));\r\n  }\r\n\r\n  const show = employees.find((employer) => employer.id === user.id);\r\n  show.showBirthday = user.showBirthday;\r\n\r\n  if (showBirthdayInfo.find((item) => item.id === show.id)) {\r\n    showBirthdayInfo = showBirthdayInfo.filter((item) => item.id !== show.id);\r\n  } else {\r\n    showBirthdayInfo.push(show);\r\n  }\r\n  localStorage.setItem('showBirthdayInfo', JSON.stringify(showBirthdayInfo));\r\n};\r\n\r\nconst isShowBirthdayChecked = (employer) => {\r\n  const showArr = JSON.parse(localStorage.getItem('showBirthdayInfo'));\r\n  let checkedUser;\r\n  if (showArr !== null && showArr.length > 0) {\r\n    checkedUser = showArr.find((item) => item.id === employer.id);\r\n  }\r\n  if (checkedUser) return true;\r\n};\r\n\r\nexport const getShowBirthdayInfo = () => (dispatch) => {\r\n  try {\r\n    const res = JSON.parse(localStorage.getItem('showBirthdayInfo'));\r\n    dispatch({ type: CREATE_SHOWBIRTHDAY_LIST, payload: res });\r\n  } catch (error) {\r\n    console.error(error.message);\r\n  }\r\n};\r\n\r\nfunction getMonthsNames() {\r\n  return [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { clearEmployees } from '../../actions/employees';\r\n\r\nconst Navbar = ({ logo, icon, clearEmployees }) => {\r\n  return (\r\n    <nav className=\"nav bg-primary\">\r\n      <div className=\"logo\">\r\n        <Link to=\"/emp_list\" onClick={() => clearEmployees()}>\r\n          {' '}\r\n          <i className={icon}></i> {logo}\r\n        </Link>\r\n      </div>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/employees\">Employees</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/about\">About</Link>\r\n        </li>\r\n        <li>\r\n          <a\r\n            href=\"https://github.com/IgorNep/emp_list\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            Github\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  logo: 'Employees List',\r\n  icon: 'fa fa-users',\r\n};\r\nNavbar.propTypes = {\r\n  logo: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n  clearEmployees: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { clearEmployees })(Navbar);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        height: '80vh',\r\n      }}\r\n    >\r\n      <h1>\r\n        <span className=\"text-primary\">Hello!</span> This is home page\r\n      </h1>\r\n      <p className=\"my-2\">Press button to show list of employees</p>\r\n      <p>\r\n        <Link to=\"/emp_list/employees\" className=\"btn btn-primary\">\r\n          Employees\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/spinner.223e1344.gif\";","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <Fragment>\r\n      <img\r\n        src={spinner}\r\n        alt=\"Loading\"\r\n        style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  changeUsersShowBirthday,\r\n  getShowBirthdayInfo,\r\n} from '../../actions/employees';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AbcListItem = ({\r\n  user,\r\n  changeUsersShowBirthday,\r\n  getShowBirthdayInfo,\r\n}) => {\r\n  const [showBirthday, setShowBirthday] = useState(user.showBirthday);\r\n\r\n  return (\r\n    <div className=\"bigbox\">\r\n      <label htmlFor={user.id}>\r\n        {user.lastName} {user.firstName}{' '}\r\n      </label>\r\n      <input\r\n        id={user.id}\r\n        type=\"checkbox\"\r\n        value={showBirthday}\r\n        checked={showBirthday}\r\n        onChange={() => {\r\n          user.showBirthday = !showBirthday;\r\n          changeUsersShowBirthday(user);\r\n          setShowBirthday(!showBirthday);\r\n          getShowBirthdayInfo();\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nAbcListItem.propTypes = {\r\n  changeUsersShowBirthday: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(null, { changeUsersShowBirthday, getShowBirthdayInfo })(\r\n  AbcListItem\r\n);\r\n","import React, { useEffect } from 'react';\r\nimport AbcListItem from './AbcListItem';\r\nimport { connect } from 'react-redux';\r\nimport { sortEmployeesByAbc } from '../../actions/employees';\r\n\r\nconst EmpData = ({ employees, sortEmployeesByAbc, abcSortedList }) => {\r\n  useEffect(() => {\r\n    sortEmployeesByAbc(employees);\r\n  }, [sortEmployeesByAbc, employees]);\r\n  return (\r\n    <div className=\"emp-data\">\r\n      <h2>Employees</h2>\r\n      <div className=\"line\"></div>\r\n      <div className=\"emp-abc\">\r\n        {abcSortedList &&\r\n          abcSortedList.map((item) => (\r\n            <div key={item.title} className=\"emp-item\">\r\n              <h3 className=\"abc-title\">{item.title}</h3>\r\n              <div>\r\n                {item.employeesAbc.length === 0\r\n                  ? '----'\r\n                  : item.employeesAbc.map((user) => (\r\n                      <AbcListItem key={user.id} user={user} />\r\n                    ))}\r\n              </div>\r\n            </div>\r\n          ))}{' '}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  abcSortedList: state.lists.abcSortedList,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  sortEmployeesByAbc,\r\n})(EmpData);\r\n","import React, { Fragment } from 'react';\r\n\r\nconst EmpBirthdayItem = ({ users }) => {\r\n  const getMonthName = (dob) => {\r\n    const months = [\r\n      'January',\r\n      'February',\r\n      'March',\r\n      'April',\r\n      'May',\r\n      'June',\r\n      'July',\r\n      'August',\r\n      'September',\r\n      'October',\r\n      'November',\r\n      'December',\r\n    ];\r\n    const date = new Date(dob);\r\n    const usersDate =\r\n      date.getDay() +\r\n      ' ' +\r\n      months[date.getMonth()] +\r\n      ', ' +\r\n      date.getFullYear() +\r\n      ' year';\r\n    return usersDate;\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {users.map((user) => (\r\n        <p key={user.id}>\r\n          {user.lastName} {user.firstName} - {getMonthName(user.dob)}\r\n        </p>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EmpBirthdayItem;\r\n","import React, { Fragment } from 'react';\r\nimport EmpBirthdayItem from './EmpBirthdayItem';\r\n\r\nconst MonthItem = ({ month }) => {\r\n  return (\r\n    <Fragment>\r\n      {month.users && month.users.length > 0 && (\r\n        <div className=\"emp-birthday-item\">\r\n          <h4>{month.title} </h4>\r\n          <div className=\"emp-birthday-list\">\r\n            <EmpBirthdayItem key={month.id} users={month.users} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MonthItem;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport MonthItem from './MonthItem';\r\nimport {\r\n  sortEmployeesByMonth,\r\n  getShowBirthdayInfo,\r\n} from '../../actions/employees';\r\n\r\nconst EmpBirthday = ({\r\n  lists: { monthSortedList, showBirthdayList },\r\n  employees,\r\n  sortEmployeesByMonth,\r\n  getShowBirthdayInfo,\r\n}) => {\r\n  useEffect(() => {\r\n    sortEmployeesByMonth(employees);\r\n    getShowBirthdayInfo();\r\n  }, [sortEmployeesByMonth, employees, getShowBirthdayInfo]);\r\n  return (\r\n    <div className=\"emp-birthday\">\r\n      <h2>Employees birthday</h2>\r\n      <div className=\"line\"></div>\r\n      <div className=\"birthday-block\">\r\n        {monthSortedList &&\r\n        showBirthdayList !== null &&\r\n        showBirthdayList.length > 0 ? (\r\n          monthSortedList.map((month) => (\r\n            <MonthItem key={month.id} month={month} />\r\n          ))\r\n        ) : (\r\n          <h4>No selected employees</h4>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nEmpBirthday.propTypes = {\r\n  lists: PropTypes.object.isRequired,\r\n  getShowBirthdayInfo: PropTypes.func.isRequired,\r\n  sortEmployeesByMonth: PropTypes.func.isRequired,\r\n  employees: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lists: state.lists,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  sortEmployeesByMonth,\r\n  getShowBirthdayInfo,\r\n})(EmpBirthday);\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getEmployees } from '../../actions/employees';\r\nimport Spinner from '../layout/Spinner';\r\nimport EmpData from './EmpData';\r\nimport EmpBirthday from './EmpBirthday';\r\n\r\nconst Employees = ({ getEmployees, lists: { loading, employees } }) => {\r\n  useEffect(() => {\r\n    getEmployees();\r\n  }, [getEmployees]);\r\n  return (\r\n    <div className=\"my-2\">\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <div className=\"employees\">\r\n          <EmpData employees={employees} />\r\n          <EmpBirthday employees={employees} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  lists: state.lists,\r\n});\r\n\r\nEmployees.propTypes = {\r\n  getEmployees: PropTypes.func.isRequired,\r\n  lists: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  getEmployees,\r\n})(Employees);\r\n","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <div\r\n    style={{\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n      height: '80vh',\r\n    }}\r\n  >\r\n    <h1>\r\n      <span className=\"text-primary\">404</span> Not Found\r\n    </h1>\r\n    <p>Sorry this page does not exist</p>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\n\r\nconst About = () => (\r\n  <div\r\n    style={{\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n      height: '80vh',\r\n    }}\r\n  >\r\n    <h1>\r\n      <span className=\"text-primary\">About</span>\r\n    </h1>\r\n    <p>Simple application for display birthday's of employees</p>\r\n    <p>Version 1.0.0</p>\r\n  </div>\r\n);\r\n\r\nexport default About;\r\n","import {\r\n  GET_EMPLOYEES,\r\n  CREATE_ABC_SORTED_LIST,\r\n  CREATE_MONTH_SORTED_LIST,\r\n  EMPLOYEES_ERROR,\r\n  CLEAR_EMPLOYEES,\r\n  SET_SHOWBIRTHDAY,\r\n  CREATE_SHOWBIRTHDAY_LIST,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  employees: [],\r\n  loading: true,\r\n  error: null,\r\n  abcSortedList: [],\r\n  monthSortedList: [],\r\n  showBirthdayList: [],\r\n};\r\n\r\n//eslint-disable-next-line\r\nexport default function (state = initialState, action) {\r\n  const { payload, type } = action;\r\n  switch (type) {\r\n    case GET_EMPLOYEES:\r\n      return {\r\n        ...state,\r\n        employees: payload,\r\n        loading: false,\r\n      };\r\n    case CREATE_ABC_SORTED_LIST:\r\n      return {\r\n        ...state,\r\n        abcSortedList: payload,\r\n        loading: false,\r\n      };\r\n    case CREATE_MONTH_SORTED_LIST:\r\n      return {\r\n        ...state,\r\n        monthSortedList: payload,\r\n        loading: false,\r\n      };\r\n    case CLEAR_EMPLOYEES:\r\n      return {\r\n        employees: [],\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case EMPLOYEES_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case SET_SHOWBIRTHDAY:\r\n      return {\r\n        ...state,\r\n        monthSortedList: [\r\n          ...state.monthSortedList,\r\n          payload.user.showBirthday\r\n            ? state.monthSortedList[payload.index].users.push(payload.user)\r\n            : (state.monthSortedList[\r\n                payload.index\r\n              ].users = state.monthSortedList[payload.index].users.filter(\r\n                (user) => user.id !== payload.user.id\r\n              )),\r\n        ],\r\n        loading: false,\r\n      };\r\n    case CREATE_SHOWBIRTHDAY_LIST:\r\n      return {\r\n        ...state,\r\n        showBirthdayList: payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport employees from './employees';\r\n\r\nexport default combineReducers({\r\n  lists: employees,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Home from './components/pages/Home';\nimport Employees from './components/employees/Employees';\nimport NotFound from './components/pages/NotFound';\nimport About from './components/pages/About';\n\n//Redux setting\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router basename={'/emp_list'}>\n        <Navbar />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/emp_list\" component={Home} />{' '}\n            <Route exact path=\"/employees\" component={Employees} />\n            <Route exact path=\"/about\" component={About} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}